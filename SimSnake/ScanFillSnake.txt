; This AI moves side-to-side, going from the top row to the
; bottom row, then using the left-most column to go back up

; Start of program: get position, jump to correct row function
Start:

    ; If x is non-zero, move normally
    GetPos  ; a = x, b = y
    SetB 0
    NE
    IfJmp NormalMovement

    ; If y is 0, move right, else move up
    GetPos  ; a = x, b = y
    Swap    ; a = y, b = x
    SetB 0
    Equal
    IfJmp MoveRight
    Jmp MoveUp

NormalMovement:

    ; Save in register a if the y position is even (0) or odd (1)
    GetPos  ; a = x, b = y
    Swap    ; a = y, b = x
    SetB 2  ; b = 2
    Mod     ; a %= 2, which means "y % 2"

    ; Branch on which row we're in
    SetB 0
    Equal
    IfJmp EvenRow   ; If 0, goto EvenRow
    Jmp OddRow      ; Else goto OddRow

; Keeps moving right unless x = 31, else move down
EvenRow:

    GetPos
    SetB 31
    NE
    IfJmp MoveRight
    Jmp MoveDown

; Keep moving left, unless x = 1, else move back
; *but* if x == 1 and y == 31, we move ahead
OddRow:

    GetPos
    SetB 1
    Equal
    SetB 500
    Swap
    Write ; We've saved "x == 1" at loc 500

    GetPos
    Swap
    SetB 31
    Equal
    Swap
    SetA 501
    Write ; We've saved "y == 31" at loc 501

    SetA 500
    ReadA
    SetB 501
    ReadB

    ; If both are true, we must go left to get into the column
    And
    IfJmp MoveLeft

    ; Else, if x == 1 go down, else go left
    SetA 500
    ReadA
    SetB 1
    Equal
    IfJmp MoveDown
    Jmp MoveLeft

; Move and restart program

    MoveLeft: GoLeft
    Jmp Start

    MoveRight: GoRight
    Jmp Start

    MoveUp: GoUp
    Jmp Start

    MoveDown: GoDown
    Jmp Start

